{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/personsService.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","id","value","onChange","autoComplete","Persons","persons","handleDelete","filteredList","length","person","name","toLowerCase","includes","map","phone","onClick","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newPhone","handlePhoneChange","type","baseUrl","axios","get","obj","post","console","log","put","delete","Notification","notificationMessage","style","className","App","useState","setPersons","setNewName","setNewPhone","setFilter","setNotificationMessage","showMessage","message","setTimeout","useEffect","personsService","then","response","data","event","target","nameObj","date","Date","toDateString","reduce","start","current","some","el","window","confirm","preventDefault","updated","find","p","updObj","concat","nameToDelete","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.545292cb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handleFilterChange}) => {\n    return (\n        <div>\n            Search: <input id='search' value={filter} onChange={handleFilterChange} autoComplete=\"off\"/>\n        </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\n\nconst Persons = ({filter, persons, handleDelete}) => {\n\n    const filteredList = filter.length === 0 ? \n        persons : persons.filter(person => \n            person.name.toLowerCase().includes(filter.toLowerCase())) \n\n    return (\n        <ul>\n            {filteredList.map(person=><li key={person.id}>{person.name}: {person.phone} <button onClick={()=>handleDelete(person.id)} >Remove</button></li>)}\n        </ul>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form id='addPersonForm' onSubmit={props.addPerson}>\n        <div>\n          name: <input id='nameField' value={props.newName} onChange={props.handleNameChange} autoComplete=\"off\"/>\n        </div>\n        <div>\n          phone number: <input id='numberField' value={props.newPhone} onChange={props.handlePhoneChange} autoComplete=\"off\"/>\n        </div>\n        <div>\n          <button id='submitForm' type='submit'>add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst addPerson = (obj) => {\n    return axios.post(baseUrl, obj)\n}\n\nconst updatePerson = (id, obj) => {\n    console.log(id, obj)\n    return axios.put(`${baseUrl}/${id}`, obj)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, addPerson, updatePerson, deletePerson}","import React from 'react'\nimport '../styles/notification.css'\n\nconst Notification = ({notificationMessage}) => {\n    if (notificationMessage === null) {\n        return null\n    }\n\n    const style = notificationMessage.includes('Added') ? 'successMessage' : 'errorMessage'\n\n    return (\n        <div className={style}>\n            {notificationMessage}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personsService from './services/personsService' \nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  const showMessage = (message) => {\n    setNotificationMessage(message)\n    setTimeout(()=>{\n      setNotificationMessage(null)\n    }, 5000)\n  }\n\n  // TODO - update function to show error when server-side validation fails\n  const addPerson = (event)=> {\n    const nameObj = {\n      name: newName,\n      date: new Date().toDateString(),\n      id: persons.reduce((start,current)=> start.id > current.id ? start : current).id + 1,\n      phone: newPhone\n    }\n\n    if (persons.some(el=> el.name === newName)) {\n      if (window.confirm(`${newName} already exists, do you want to update the phone number?`)) {\n        event.preventDefault()\n        const updated = persons.find(p=> p.name === newName)\n        const updObj = {...updated, phone: newPhone}\n        personsService.updatePerson(updated.id, updObj).then(response => {\n          console.log(response)\n          setPersons(persons.map(p => p.name !== newName ? p : response.data))\n          setNewName('')\n          setNewPhone('')\n        })\n      }\n      return\n    }\n    event.preventDefault()\n    personsService.addPerson(nameObj).then(response => {\n      setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewPhone('')\n        showMessage(`Added ${nameObj.name} to the Phonebook`)\n    })\n  }\n\n  const handleNameChange = (event)=> {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event)=> {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  useEffect(()=>{\n    personsService.getAll().then(response => {\n      setPersons(response.data)\n    })\n  }, [])\n\n  const handleDelete = (id) => {\n    const nameToDelete = persons.find(p => p.id === id).name\n    if (window.confirm(`Do you want to delete ${nameToDelete}?`)) {\n      personsService.deletePerson(id).then(response => {\n        setPersons(persons.filter(person => person.id != id))\n        showMessage(`Removed ${nameToDelete} from Phonebook`)\n      }).catch(error=>{\n        showMessage(`${nameToDelete} was already deleted from the Phonebook`)\n        setPersons(persons.filter(person => person.id != id))\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Notification notificationMessage={notificationMessage} />\n      <h2>Phonebook</h2>\n      <Filter handleFilterChange={handleFilterChange} filter={filter} />\n      <h3>Add a new contact</h3>\n      <PersonForm addPerson={addPerson} newName={newName} newPhone={newPhone} handleNameChange={handleNameChange} handlePhoneChange={handlePhoneChange}/>\n      <h2>Contacts</h2>\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete}/>\n    </div>\n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n\n"],"sourceRoot":""}